; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30723.0 

	TITLE	c:\Users\ert283\Downloads\CS3843_Project_InitialStudentFiles-Rev1(1)\CryptoMain_Initial.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?gkey@@3PAEA					; gkey
PUBLIC	?gptrKey@@3PAEA					; gptrKey
PUBLIC	?gPassword@@3PADA				; gPassword
PUBLIC	?gPasswordHash@@3PAEA				; gPasswordHash
PUBLIC	?gptrPasswordHash@@3PAEA			; gptrPasswordHash
PUBLIC	?gdebug1@@3EA					; gdebug1
PUBLIC	?gdebug2@@3EA					; gdebug2
PUBLIC	?gfptrIn@@3PAU_iobuf@@A				; gfptrIn
PUBLIC	?gfptrOut@@3PAU_iobuf@@A			; gfptrOut
PUBLIC	?gfptrKey@@3PAU_iobuf@@A			; gfptrKey
PUBLIC	?gInFileName@@3PADA				; gInFileName
PUBLIC	?gOutFileName@@3PADA				; gOutFileName
PUBLIC	?gKeyFileName@@3PADA				; gKeyFileName
PUBLIC	?gOp@@3HA					; gOp
PUBLIC	?gNumRounds@@3HA				; gNumRounds
PUBLIC	?gEncodeTable@@3PAEA				; gEncodeTable
PUBLIC	?gDecodeTable@@3PAEA				; gDecodeTable
_BSS	SEGMENT
?gkey@@3PAEA DB	010001H DUP (?)				; gkey
	ALIGN	4

?gPasswordHash@@3PAEA DB 020H DUP (?)			; gPasswordHash
?gdebug1@@3EA DB 01H DUP (?)				; gdebug1
	ALIGN	4

?gdebug2@@3EA DB 01H DUP (?)				; gdebug2
	ALIGN	4

?gfptrIn@@3PAU_iobuf@@A DD 01H DUP (?)			; gfptrIn
?gfptrOut@@3PAU_iobuf@@A DD 01H DUP (?)			; gfptrOut
?gfptrKey@@3PAU_iobuf@@A DD 01H DUP (?)			; gfptrKey
?gInFileName@@3PADA DB 0100H DUP (?)			; gInFileName
?gOutFileName@@3PADA DB 0100H DUP (?)			; gOutFileName
?gKeyFileName@@3PADA DB 0100H DUP (?)			; gKeyFileName
?gOp@@3HA DD	01H DUP (?)				; gOp
_BSS	ENDS
_DATA	SEGMENT
?gptrKey@@3PAEA DD FLAT:?gkey@@3PAEA			; gptrKey
?gptrPasswordHash@@3PAEA DD FLAT:?gPasswordHash@@3PAEA	; gptrPasswordHash
?gPassword@@3PADA DB 'password', 00H			; gPassword
	ORG $+247
?gNumRounds@@3HA DD 01H					; gNumRounds
	ORG $+4
?gEncodeTable@@3PAEA DB 027H				; gEncodeTable
	DB	046H
	DB	017H
	DB	07H
	DB	03cH
	DB	0ffH
	DB	03fH
	DB	0d3H
	DB	04cH
	DB	0b2H
	DB	0c1H
	DB	0c3H
	DB	05fH
	DB	015H
	DB	04H
	DB	0efH
	DB	038H
	DB	0aeH
	DB	0eH
	DB	097H
	DB	02dH
	DB	04dH
	DB	0f8H
	DB	0c2H
	DB	035H
	DB	0daH
	DB	09fH
	DB	024H
	DB	043H
	DB	050H
	DB	09dH
	DB	045H
	DB	0d2H
	DB	0aH
	DB	078H
	DB	0e0H
	DB	03eH
	DB	018H
	DB	089H
	DB	062H
	DB	0c7H
	DB	07fH
	DB	093H
	DB	0ceH
	DB	0b4H
	DB	031H
	DB	07bH
	DB	0ccH
	DB	00H
	DB	0dbH
	DB	010H
	DB	092H
	DB	05dH
	DB	0f4H
	DB	077H
	DB	08aH
	DB	02cH
	DB	0a9H
	DB	034H
	DB	0faH
	DB	026H
	DB	01cH
	DB	0f6H
	DB	0a4H
	DB	095H
	DB	06cH
	DB	04bH
	DB	0c4H
	DB	09H
	DB	05aH
	DB	074H
	DB	0ecH
	DB	06aH
	DB	0afH
	DB	04aH
	DB	084H
	DB	063H
	DB	0dH
	DB	0aaH
	DB	014H
	DB	030H
	DB	016H
	DB	064H
	DB	06dH
	DB	058H
	DB	0d0H
	DB	0bbH
	DB	0d8H
	DB	075H
	DB	0e5H
	DB	02aH
	DB	09bH
	DB	041H
	DB	0c8H
	DB	08dH
	DB	0e6H
	DB	01H
	DB	0b1H
	DB	0a0H
	DB	0f3H
	DB	0ebH
	DB	09eH
	DB	069H
	DB	087H
	DB	037H
	DB	081H
	DB	048H
	DB	07cH
	DB	0a8H
	DB	0c0H
	DB	0f5H
	DB	0b7H
	DB	023H
	DB	0a3H
	DB	07eH
	DB	02eH
	DB	0e4H
	DB	01dH
	DB	056H
	DB	033H
	DB	03dH
	DB	0a5H
	DB	0e3H
	DB	0d1H
	DB	0bfH
	DB	055H
	DB	022H
	DB	0c6H
	DB	0c9H
	DB	0dfH
	DB	032H
	DB	09cH
	DB	0fdH
	DB	0d6H
	DB	03H
	DB	06H
	DB	05cH
	DB	08eH
	DB	0b0H
	DB	03bH
	DB	08cH
	DB	036H
	DB	04fH
	DB	02H
	DB	025H
	DB	07aH
	DB	0edH
	DB	07dH
	DB	0d5H
	DB	082H
	DB	011H
	DB	090H
	DB	0bH
	DB	0cdH
	DB	0b3H
	DB	0abH
	DB	02bH
	DB	053H
	DB	0b6H
	DB	054H
	DB	0a2H
	DB	0e8H
	DB	059H
	DB	072H
	DB	086H
	DB	083H
	DB	0caH
	DB	049H
	DB	06eH
	DB	040H
	DB	0bcH
	DB	061H
	DB	052H
	DB	0feH
	DB	079H
	DB	0eaH
	DB	029H
	DB	042H
	DB	088H
	DB	096H
	DB	0beH
	DB	012H
	DB	0cbH
	DB	0baH
	DB	08H
	DB	01eH
	DB	051H
	DB	02fH
	DB	044H
	DB	020H
	DB	065H
	DB	06bH
	DB	04eH
	DB	067H
	DB	0eeH
	DB	0a6H
	DB	071H
	DB	0dcH
	DB	076H
	DB	019H
	DB	0deH
	DB	0f2H
	DB	0fbH
	DB	070H
	DB	021H
	DB	0cfH
	DB	073H
	DB	068H
	DB	0e7H
	DB	0b9H
	DB	0f1H
	DB	05bH
	DB	091H
	DB	0d9H
	DB	0d4H
	DB	099H
	DB	01bH
	DB	0e1H
	DB	0f0H
	DB	0ddH
	DB	0fcH
	DB	0e2H
	DB	039H
	DB	05eH
	DB	01aH
	DB	066H
	DB	060H
	DB	0a7H
	DB	08bH
	DB	0b8H
	DB	0d7H
	DB	094H
	DB	0e9H
	DB	0acH
	DB	0c5H
	DB	09aH
	DB	0bdH
	DB	06fH
	DB	0f9H
	DB	028H
	DB	013H
	DB	05H
	DB	057H
	DB	0b5H
	DB	0cH
	DB	080H
	DB	08fH
	DB	03aH
	DB	01fH
	DB	047H
	DB	098H
	DB	0fH
	DB	0f7H
	DB	0adH
	DB	085H
	DB	0a1H
?gDecodeTable@@3PAEA DB 030H				; gDecodeTable
	DB	060H
	DB	08fH
	DB	086H
	DB	0eH
	DB	0f1H
	DB	087H
	DB	03H
	DB	0b8H
	DB	044H
	DB	021H
	DB	098H
	DB	0f4H
	DB	04dH
	DB	012H
	DB	0fbH
	DB	032H
	DB	096H
	DB	0b5H
	DB	0f0H
	DB	04fH
	DB	0dH
	DB	051H
	DB	02H
	DB	025H
	DB	0c7H
	DB	0e0H
	DB	0d8H
	DB	03dH
	DB	075H
	DB	0b9H
	DB	0f8H
	DB	0bdH
	DB	0ccH
	DB	07eH
	DB	070H
	DB	01bH
	DB	090H
	DB	03cH
	DB	00H
	DB	0efH
	DB	0b0H
	DB	05aH
	DB	09cH
	DB	038H
	DB	014H
	DB	073H
	DB	0bbH
	DB	050H
	DB	02dH
	DB	082H
	DB	077H
	DB	03aH
	DB	018H
	DB	08dH
	DB	068H
	DB	010H
	DB	0deH
	DB	0f7H
	DB	08bH
	DB	04H
	DB	078H
	DB	024H
	DB	06H
	DB	0a9H
	DB	05cH
	DB	0b1H
	DB	01cH
	DB	0bcH
	DB	01fH
	DB	01H
	DB	0f9H
	DB	06aH
	DB	0a7H
	DB	04aH
	DB	042H
	DB	08H
	DB	015H
	DB	0c0H
	DB	08eH
	DB	01dH
	DB	0baH
	DB	0acH
	DB	09dH
	DB	09fH
	DB	07dH
	DB	076H
	DB	0f2H
	DB	054H
	DB	0a2H
	DB	045H
	DB	0d3H
	DB	088H
	DB	034H
	DB	0dfH
	DB	0cH
	DB	0e2H
	DB	0abH
	DB	027H
	DB	04cH
	DB	052H
	DB	0beH
	DB	0e1H
	DB	0c1H
	DB	0cfH
	DB	066H
	DB	048H
	DB	0bfH
	DB	041H
	DB	053H
	DB	0a8H
	DB	0edH
	DB	0cbH
	DB	0c4H
	DB	0a3H
	DB	0ceH
	DB	046H
	DB	058H
	DB	0c6H
	DB	036H
	DB	022H
	DB	0aeH
	DB	091H
	DB	02eH
	DB	06bH
	DB	093H
	DB	072H
	DB	029H
	DB	0f5H
	DB	069H
	DB	095H
	DB	0a5H
	DB	04bH
	DB	0feH
	DB	0a4H
	DB	067H
	DB	0b2H
	DB	026H
	DB	037H
	DB	0e4H
	DB	08cH
	DB	05eH
	DB	089H
	DB	0f6H
	DB	097H
	DB	0d4H
	DB	033H
	DB	02aH
	DB	0e7H
	DB	040H
	DB	0b3H
	DB	013H
	DB	0faH
	DB	0d7H
	DB	0ebH
	DB	05bH
	DB	083H
	DB	01eH
	DB	065H
	DB	01aH
	DB	062H
	DB	0ffH
	DB	0a0H
	DB	071H
	DB	03fH
	DB	079H
	DB	0c3H
	DB	0e3H
	DB	06cH
	DB	039H
	DB	04eH
	DB	09bH
	DB	0e9H
	DB	0fdH
	DB	011H
	DB	049H
	DB	08aH
	DB	061H
	DB	09H
	DB	09aH
	DB	02cH
	DB	0f3H
	DB	09eH
	DB	06fH
	DB	0e5H
	DB	0d1H
	DB	0b7H
	DB	056H
	DB	0aaH
	DB	0ecH
	DB	0b4H
	DB	07cH
	DB	06dH
	DB	0aH
	DB	017H
	DB	0bH
	DB	043H
	DB	0eaH
	DB	07fH
	DB	028H
	DB	05dH
	DB	080H
	DB	0a6H
	DB	0b6H
	DB	02fH
	DB	099H
	DB	02bH
	DB	0cdH
	DB	055H
	DB	07bH
	DB	020H
	DB	07H
	DB	0d6H
	DB	094H
	DB	085H
	DB	0e6H
	DB	057H
	DB	0d5H
	DB	019H
	DB	031H
	DB	0c5H
	DB	0dbH
	DB	0c8H
	DB	081H
	DB	023H
	DB	0d9H
	DB	0ddH
	DB	07aH
	DB	074H
	DB	059H
	DB	05fH
	DB	0d0H
	DB	0a1H
	DB	0e8H
	DB	0afH
	DB	064H
	DB	047H
	DB	092H
	DB	0c2H
	DB	0fH
	DB	0daH
	DB	0d2H
	DB	0c9H
	DB	063H
	DB	035H
	DB	06eH
	DB	03eH
	DB	0fcH
	DB	016H
	DB	0eeH
	DB	03bH
	DB	0caH
	DB	0dcH
	DB	084H
	DB	0adH
	DB	05H
_DATA	ENDS
PUBLIC	?exCountLetters@@YAXPADHPAH11@Z			; exCountLetters
PUBLIC	?encryptFile@@YAHPAU_iobuf@@0@Z			; encryptFile
PUBLIC	?decryptFile@@YAHPAU_iobuf@@0@Z			; decryptFile
PUBLIC	?openInputFile@@YAPAU_iobuf@@PAD@Z		; openInputFile
PUBLIC	?openOutputFile@@YAPAU_iobuf@@PAD@Z		; openOutputFile
PUBLIC	?usage@@YAXQAPAD@Z				; usage
PUBLIC	?parseCommandLine@@YAXHQAPAD@Z			; parseCommandLine
PUBLIC	_main
PUBLIC	??_C@_0CA@JAEAEOCO@Error?5?9?5Input?5file?5too?5large?4?6?6?$AA@ ; `string'
PUBLIC	??_C@_0DN@DPPAPLJB@Error?5?9?5Could?5not?5allocate?5?$CFd?5by@ ; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_0CK@CDMOMEJ@?6?6Error?5?9?5Could?5not?5open?5input?5f@ ; `string'
PUBLIC	??_C@_03BFHAFKOB@wb?$CL?$AA@			; `string'
PUBLIC	??_C@_0CL@DAJOHFLE@?6?6Error?5?9?5Could?5not?5open?5output?5@ ; `string'
PUBLIC	??_C@_0L@HKODOBAD@?6?6Usage?3?6?6?$AA@		; `string'
PUBLIC	??_C@_0N@MOPCGLHN@To?5Encrypt?3?6?$AA@		; `string'
PUBLIC	??_C@_0EF@JJIJOCMP@?$CFs?5?9e?5?$DMmessage_filename?$DO?5?9k?5?$DMkey@ ; `string'
PUBLIC	??_C@_0N@KDGFJOJO@To?5Decrypt?3?6?$AA@		; `string'
PUBLIC	??_C@_0EF@BJGDLACJ@?$CFs?5?9d?5?$DMmessage_filename?$DO?5?9k?5?$DMkey@ ; `string'
PUBLIC	??_C@_0CK@PGOBLBKL@?9e?5filename?7?7?3encrypt?5the?5specif@ ; `string'
PUBLIC	??_C@_0CK@GOFFCHFO@?9d?5filename?7?7?3decrypt?5the?5specif@ ; `string'
PUBLIC	??_C@_0EL@OBNDFCCB@?9p?5password?7?7?3the?5password?5to?5be@ ; `string'
PUBLIC	??_C@_0ED@MAGAAIDD@?9r?5?$DM?$CDrounds?$DO?7?7?3number?5of?5encrypt@ ; `string'
PUBLIC	??_C@_0FE@LAODCPP@?9o?5filename?7?7?3name?5of?5the?5output@ ; `string'
PUBLIC	??_C@_0CK@IPLMHCJC@The?5order?5of?5the?5options?5is?5irre@ ; `string'
PUBLIC	??_C@_0CO@BHBEBKEC@All?5options?5must?5be?5preceeded?5by@ ; `string'
PUBLIC	??_C@_0FA@LMDBBGLK@Error?$CB?5Already?5specifed?5an?5input@ ; `string'
PUBLIC	??_C@_0CM@IFNFECJC@Error?$CB?5Must?5specify?5a?5filename?5a@ ; `string'
PUBLIC	??_C@_0FA@FBLKPEDD@Error?$CB?5Already?5specifed?5an?5input@ ; `string'
PUBLIC	??_C@_0CM@LILFGLCC@Error?$CB?5Must?5specify?5a?5filename?5a@ ; `string'
PUBLIC	??_C@_0CK@OMLLAEKC@Error?$CB?5Already?5specifed?5an?5outpu@ ; `string'
PUBLIC	??_C@_0CM@MPGFFKDD@Error?$CB?5Must?5specify?5a?5filename?5a@ ; `string'
PUBLIC	??_C@_0CG@EICJBIPF@Error?$CB?5Already?5specifed?5a?5key?5fi@ ; `string'
PUBLIC	??_C@_0CM@DKOFPMPD@Error?$CB?5Must?5specify?5a?5filename?5a@ ; `string'
PUBLIC	??_C@_0CG@OPKIBCL@Error?$CB?5Already?5specifed?5a?5passwo@ ; `string'
PUBLIC	??_C@_0CK@LDPPFIPG@Error?$CB?5Must?5enter?5a?5password?5aft@ ; `string'
PUBLIC	??_C@_0DG@KLPKKKEI@Error?$CB?5Must?5enter?5number?5between@ ; `string'
PUBLIC	??_C@_0EG@DAMCJAK@Warning?$CB?5Entered?5bad?5value?5for?5n@ ; `string'
PUBLIC	??_C@_0CI@KGFPEMBM@Error?$CB?5Illegal?5option?5in?5argumen@ ; `string'
PUBLIC	??_C@_0DA@HLBMPEJP@Error?$CB?5Encrypt?5or?5Decrypt?5must?5b@ ; `string'
PUBLIC	??_C@_0CC@GEEGHLPK@Error?$CB?5No?5input?5file?5specified?4?6@ ; `string'
PUBLIC	??_C@_0CA@JJGKKPID@Error?$CB?5No?5key?5file?5specified?4?6?6?$AA@ ; `string'
PUBLIC	??_C@_0CF@NMMOLMAM@Warning?$CB?5Using?5default?5?8password@ ; `string'
PUBLIC	??_C@_04EHENEAPI@?4enc?$AA@			; `string'
PUBLIC	??_C@_04PDKEMIHM@?4dec?$AA@			; `string'
PUBLIC	??_C@_06LPALFHPD@ABCDE?$AA?$AA@			; `string'
PUBLIC	??_C@_0BE@ILNEECEA@?6?6Crypto?5Order?3?$CFs?6?6?$AA@ ; `string'
PUBLIC	??_C@_0CI@KLALAHPJ@Error?$CB?5Password?5not?5hashed?5corre@ ; `string'
PUBLIC	??_C@_0DD@EONHCAAK@Error?$CB?5Length?5of?5key?5file?5is?5not@ ; `string'
EXTRN	_strcpy:PROC
EXTRN	_strcat:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__strncpy:PROC
EXTRN	__imp__exit:PROC
EXTRN	__imp__atoi:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp___fileno:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp__fread:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	__imp__printf:PROC
EXTRN	__imp___filelength:PROC
EXTRN	?sha256@@YAHPAD0KQAE@Z:PROC			; sha256
EXTRN	?encryptData@@YAHPADH@Z:PROC			; encryptData
EXTRN	?decryptData@@YAHPADH@Z:PROC			; decryptData
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0DD@EONHCAAK@Error?$CB?5Length?5of?5key?5file?5is?5not@
CONST	SEGMENT
??_C@_0DD@EONHCAAK@Error?$CB?5Length?5of?5key?5file?5is?5not@ DB 'Error! '
	DB	'Length of key file is not at least 65537.', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@KLALAHPJ@Error?$CB?5Password?5not?5hashed?5corre@
CONST	SEGMENT
??_C@_0CI@KLALAHPJ@Error?$CB?5Password?5not?5hashed?5corre@ DB 'Error! Pa'
	DB	'ssword not hashed correctly.', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ILNEECEA@?6?6Crypto?5Order?3?$CFs?6?6?$AA@
CONST	SEGMENT
??_C@_0BE@ILNEECEA@?6?6Crypto?5Order?3?$CFs?6?6?$AA@ DB 0aH, 0aH, 'Crypto'
	DB	' Order:%s', 0aH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06LPALFHPD@ABCDE?$AA?$AA@
CONST	SEGMENT
??_C@_06LPALFHPD@ABCDE?$AA?$AA@ DB 'ABCDE', 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PDKEMIHM@?4dec?$AA@
CONST	SEGMENT
??_C@_04PDKEMIHM@?4dec?$AA@ DB '.dec', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04EHENEAPI@?4enc?$AA@
CONST	SEGMENT
??_C@_04EHENEAPI@?4enc?$AA@ DB '.enc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NMMOLMAM@Warning?$CB?5Using?5default?5?8password@
CONST	SEGMENT
??_C@_0CF@NMMOLMAM@Warning?$CB?5Using?5default?5?8password@ DB 'Warning! '
	DB	'Using default ''password''.', 0aH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JJGKKPID@Error?$CB?5No?5key?5file?5specified?4?6?6?$AA@
CONST	SEGMENT
??_C@_0CA@JJGKKPID@Error?$CB?5No?5key?5file?5specified?4?6?6?$AA@ DB 'Err'
	DB	'or! No key file specified.', 0aH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GEEGHLPK@Error?$CB?5No?5input?5file?5specified?4?6@
CONST	SEGMENT
??_C@_0CC@GEEGHLPK@Error?$CB?5No?5input?5file?5specified?4?6@ DB 'Error! '
	DB	'No input file specified.', 0aH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@HLBMPEJP@Error?$CB?5Encrypt?5or?5Decrypt?5must?5b@
CONST	SEGMENT
??_C@_0DA@HLBMPEJP@Error?$CB?5Encrypt?5or?5Decrypt?5must?5b@ DB 'Error! E'
	DB	'ncrypt or Decrypt must be specified.', 0aH, 0aH, ')', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@KGFPEMBM@Error?$CB?5Illegal?5option?5in?5argumen@
CONST	SEGMENT
??_C@_0CI@KGFPEMBM@Error?$CB?5Illegal?5option?5in?5argumen@ DB 'Error! Il'
	DB	'legal option in argument. %s', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@DAMCJAK@Warning?$CB?5Entered?5bad?5value?5for?5n@
CONST	SEGMENT
??_C@_0EG@DAMCJAK@Warning?$CB?5Entered?5bad?5value?5for?5n@ DB 'Warning! '
	DB	'Entered bad value for number of rounds. Setting it to one.', 0aH
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KLPKKKEI@Error?$CB?5Must?5enter?5number?5between@
CONST	SEGMENT
??_C@_0DG@KLPKKKEI@Error?$CB?5Must?5enter?5number?5between@ DB 'Error! Mu'
	DB	'st enter number between 1 and 3 after ''-r''', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@LDPPFIPG@Error?$CB?5Must?5enter?5a?5password?5aft@
CONST	SEGMENT
??_C@_0CK@LDPPFIPG@Error?$CB?5Must?5enter?5a?5password?5aft@ DB 'Error! M'
	DB	'ust enter a password after ''-p''', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@OPKIBCL@Error?$CB?5Already?5specifed?5a?5passwo@
CONST	SEGMENT
??_C@_0CG@OPKIBCL@Error?$CB?5Already?5specifed?5a?5passwo@ DB 'Error! Alr'
	DB	'eady specifed a password.', 0aH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@DKOFPMPD@Error?$CB?5Must?5specify?5a?5filename?5a@
CONST	SEGMENT
??_C@_0CM@DKOFPMPD@Error?$CB?5Must?5specify?5a?5filename?5a@ DB 'Error! M'
	DB	'ust specify a filename after ''-k''', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@EICJBIPF@Error?$CB?5Already?5specifed?5a?5key?5fi@
CONST	SEGMENT
??_C@_0CG@EICJBIPF@Error?$CB?5Already?5specifed?5a?5key?5fi@ DB 'Error! A'
	DB	'lready specifed a key file.', 0aH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@MPGFFKDD@Error?$CB?5Must?5specify?5a?5filename?5a@
CONST	SEGMENT
??_C@_0CM@MPGFFKDD@Error?$CB?5Must?5specify?5a?5filename?5a@ DB 'Error! M'
	DB	'ust specify a filename after ''-o''', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@OMLLAEKC@Error?$CB?5Already?5specifed?5an?5outpu@
CONST	SEGMENT
??_C@_0CK@OMLLAEKC@Error?$CB?5Already?5specifed?5an?5outpu@ DB 'Error! Al'
	DB	'ready specifed an output file.', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@LILFGLCC@Error?$CB?5Must?5specify?5a?5filename?5a@
CONST	SEGMENT
??_C@_0CM@LILFGLCC@Error?$CB?5Must?5specify?5a?5filename?5a@ DB 'Error! M'
	DB	'ust specify a filename after ''-d''', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@FBLKPEDD@Error?$CB?5Already?5specifed?5an?5input@
CONST	SEGMENT
??_C@_0FA@FBLKPEDD@Error?$CB?5Already?5specifed?5an?5input@ DB 'Error! Al'
	DB	'ready specifed an input file - can''t decrypt/encrypt multipl'
	DB	'e files.', 0aH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@IFNFECJC@Error?$CB?5Must?5specify?5a?5filename?5a@
CONST	SEGMENT
??_C@_0CM@IFNFECJC@Error?$CB?5Must?5specify?5a?5filename?5a@ DB 'Error! M'
	DB	'ust specify a filename after ''-e''', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@LMDBBGLK@Error?$CB?5Already?5specifed?5an?5input@
CONST	SEGMENT
??_C@_0FA@LMDBBGLK@Error?$CB?5Already?5specifed?5an?5input@ DB 'Error! Al'
	DB	'ready specifed an input file - can''t encrypt/decrypt multipl'
	DB	'e files.', 0aH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@BHBEBKEC@All?5options?5must?5be?5preceeded?5by@
CONST	SEGMENT
??_C@_0CO@BHBEBKEC@All?5options?5must?5be?5preceeded?5by@ DB 'All options'
	DB	' must be preceeded by a dash ''-''', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@IPLMHCJC@The?5order?5of?5the?5options?5is?5irre@
CONST	SEGMENT
??_C@_0CK@IPLMHCJC@The?5order?5of?5the?5options?5is?5irre@ DB 'The order '
	DB	'of the options is irrelevant.', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@LAODCPP@?9o?5filename?7?7?3name?5of?5the?5output@
CONST	SEGMENT
??_C@_0FE@LAODCPP@?9o?5filename?7?7?3name?5of?5the?5output@ DB '-o filena'
	DB	'me', 09H, 09H, ':name of the output file [default=''encrypted'
	DB	'.txt'' or ''decrypted.txt''', 0aH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@MAGAAIDD@?9r?5?$DM?$CDrounds?$DO?7?7?3number?5of?5encrypt@
CONST	SEGMENT
??_C@_0ED@MAGAAIDD@?9r?5?$DM?$CDrounds?$DO?7?7?3number?5of?5encrypt@ DB '-'
	DB	'r <#rounds>', 09H, 09H, ':number of encryption rounds (1 - 3)'
	DB	'  [default = 1]', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@OBNDFCCB@?9p?5password?7?7?3the?5password?5to?5be@
CONST	SEGMENT
??_C@_0EL@OBNDFCCB@?9p?5password?7?7?3the?5password?5to?5be@ DB '-p passw'
	DB	'ord', 09H, 09H, ':the password to be used for encryption [def'
	DB	'ault=''password'']', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@GOFFCHFO@?9d?5filename?7?7?3decrypt?5the?5specif@
CONST	SEGMENT
??_C@_0CK@GOFFCHFO@?9d?5filename?7?7?3decrypt?5the?5specif@ DB '-d filena'
	DB	'me', 09H, 09H, ':decrypt the specified file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PGOBLBKL@?9e?5filename?7?7?3encrypt?5the?5specif@
CONST	SEGMENT
??_C@_0CK@PGOBLBKL@?9e?5filename?7?7?3encrypt?5the?5specif@ DB '-e filena'
	DB	'me', 09H, 09H, ':encrypt the specified file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@BJGDLACJ@?$CFs?5?9d?5?$DMmessage_filename?$DO?5?9k?5?$DMkey@
CONST	SEGMENT
??_C@_0EF@BJGDLACJ@?$CFs?5?9d?5?$DMmessage_filename?$DO?5?9k?5?$DMkey@ DB '%'
	DB	's -d <message_filename> -k <keyfile> -p <password> [-r <#roun'
	DB	'ds>]', 0aH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KDGFJOJO@To?5Decrypt?3?6?$AA@
CONST	SEGMENT
??_C@_0N@KDGFJOJO@To?5Decrypt?3?6?$AA@ DB 'To Decrypt:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@JJIJOCMP@?$CFs?5?9e?5?$DMmessage_filename?$DO?5?9k?5?$DMkey@
CONST	SEGMENT
??_C@_0EF@JJIJOCMP@?$CFs?5?9e?5?$DMmessage_filename?$DO?5?9k?5?$DMkey@ DB '%'
	DB	's -e <message_filename> -k <keyfile> -p <password> [-r <#roun'
	DB	'ds>]', 0aH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MOPCGLHN@To?5Encrypt?3?6?$AA@
CONST	SEGMENT
??_C@_0N@MOPCGLHN@To?5Encrypt?3?6?$AA@ DB 'To Encrypt:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HKODOBAD@?6?6Usage?3?6?6?$AA@
CONST	SEGMENT
??_C@_0L@HKODOBAD@?6?6Usage?3?6?6?$AA@ DB 0aH, 0aH, 'Usage:', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@DAJOHFLE@?6?6Error?5?9?5Could?5not?5open?5output?5@
CONST	SEGMENT
??_C@_0CL@DAJOHFLE@?6?6Error?5?9?5Could?5not?5open?5output?5@ DB 0aH, 0aH
	DB	'Error - Could not open output file %s!', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03BFHAFKOB@wb?$CL?$AA@
CONST	SEGMENT
??_C@_03BFHAFKOB@wb?$CL?$AA@ DB 'wb+', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@CDMOMEJ@?6?6Error?5?9?5Could?5not?5open?5input?5f@
CONST	SEGMENT
??_C@_0CK@CDMOMEJ@?6?6Error?5?9?5Could?5not?5open?5input?5f@ DB 0aH, 0aH, 'E'
	DB	'rror - Could not open input file %s!', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@DPPAPLJB@Error?5?9?5Could?5not?5allocate?5?$CFd?5by@
CONST	SEGMENT
??_C@_0DN@DPPAPLJB@Error?5?9?5Could?5not?5allocate?5?$CFd?5by@ DB 'Error '
	DB	'- Could not allocate %d bytes of memory on the heap.', 0aH, 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JAEAEOCO@Error?5?9?5Input?5file?5too?5large?4?6?6?$AA@
CONST	SEGMENT
??_C@_0CA@JAEAEOCO@Error?5?9?5Input?5file?5too?5large?4?6?6?$AA@ DB 'Erro'
	DB	'r - Input file too large.', 0aH, 0aH, 00H	; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _main
_TEXT	SEGMENT
_resulti$ = -20						; size = 4
_length$ = -8						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\users\ert283\downloads\cs3843_project_initialstudentfiles-rev1(1)\cryptomain_initial.cpp
; Line 439
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 451
  0001e	8b f4		 mov	 esi, esp
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06LPALFHPD@ABCDE?$AA?$AA@
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@ILNEECEA@?6?6Crypto?5Order?3?$CFs?6?6?$AA@
  0002a	8b fc		 mov	 edi, esp
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  00032	3b fc		 cmp	 edi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0003e	c1 e1 00	 shl	 ecx, 0
  00041	03 c1		 add	 eax, ecx
  00043	50		 push	 eax
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 454
  00054	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  00057	50		 push	 eax
  00058	8b 4d 08	 mov	 ecx, DWORD PTR _argc$[ebp]
  0005b	51		 push	 ecx
  0005c	e8 00 00 00 00	 call	 ?parseCommandLine@@YAXHQAPAD@Z ; parseCommandLine
  00061	83 c4 08	 add	 esp, 8
; Line 457
  00064	68 00 00 00 00	 push	 OFFSET ?gInFileName@@3PADA ; gInFileName
  00069	e8 00 00 00 00	 call	 ?openInputFile@@YAPAU_iobuf@@PAD@Z ; openInputFile
  0006e	83 c4 04	 add	 esp, 4
  00071	a3 00 00 00 00	 mov	 DWORD PTR ?gfptrIn@@3PAU_iobuf@@A, eax ; gfptrIn
; Line 458
  00076	68 00 00 00 00	 push	 OFFSET ?gKeyFileName@@3PADA ; gKeyFileName
  0007b	e8 00 00 00 00	 call	 ?openInputFile@@YAPAU_iobuf@@PAD@Z ; openInputFile
  00080	83 c4 04	 add	 esp, 4
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?gfptrKey@@3PAU_iobuf@@A, eax ; gfptrKey
; Line 459
  00088	68 00 00 00 00	 push	 OFFSET ?gOutFileName@@3PADA ; gOutFileName
  0008d	e8 00 00 00 00	 call	 ?openOutputFile@@YAPAU_iobuf@@PAD@Z ; openOutputFile
  00092	83 c4 04	 add	 esp, 4
  00095	a3 00 00 00 00	 mov	 DWORD PTR ?gfptrOut@@3PAU_iobuf@@A, eax ; gfptrOut
; Line 461
  0009a	68 00 00 00 00	 push	 OFFSET ?gPassword@@3PADA ; gPassword
  0009f	e8 00 00 00 00	 call	 _strlen
  000a4	83 c4 04	 add	 esp, 4
  000a7	89 45 f8	 mov	 DWORD PTR _length$[ebp], eax
; Line 463
  000aa	68 00 00 00 00	 push	 OFFSET ?gPasswordHash@@3PAEA ; gPasswordHash
  000af	8b 45 f8	 mov	 eax, DWORD PTR _length$[ebp]
  000b2	50		 push	 eax
  000b3	68 00 00 00 00	 push	 OFFSET ?gPassword@@3PADA ; gPassword
  000b8	6a 00		 push	 0
  000ba	e8 00 00 00 00	 call	 ?sha256@@YAHPAD0KQAE@Z	; sha256
  000bf	83 c4 10	 add	 esp, 16			; 00000010H
  000c2	89 45 ec	 mov	 DWORD PTR _resulti$[ebp], eax
; Line 464
  000c5	83 7d ec 00	 cmp	 DWORD PTR _resulti$[ebp], 0
  000c9	74 41		 je	 SHORT $LN4@main
; Line 466
  000cb	8b f4		 mov	 esi, esp
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@KLALAHPJ@Error?$CB?5Password?5not?5hashed?5corre@
  000d2	8b fc		 mov	 edi, esp
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  000da	3b fc		 cmp	 edi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e1	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000e6	d1 e1		 shl	 ecx, 1
  000e8	03 c1		 add	 eax, ecx
  000ea	50		 push	 eax
  000eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  000f1	83 c4 08	 add	 esp, 8
  000f4	3b f4		 cmp	 esi, esp
  000f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 467
  000fb	8b f4		 mov	 esi, esp
  000fd	6a ff		 push	 -1
  000ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
  00105	3b f4		 cmp	 esi, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@main:
; Line 470
  0010c	8b f4		 mov	 esi, esp
  0010e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gfptrKey@@3PAU_iobuf@@A ; gfptrKey
  00113	50		 push	 eax
  00114	68 01 00 01 00	 push	 65537			; 00010001H
  00119	6a 01		 push	 1
  0011b	68 00 00 00 00	 push	 OFFSET ?gkey@@3PAEA	; gkey
  00120	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  00126	83 c4 10	 add	 esp, 16			; 00000010H
  00129	3b f4		 cmp	 esi, esp
  0012b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00130	89 45 f8	 mov	 DWORD PTR _length$[ebp], eax
; Line 471
  00133	81 7d f8 01 00
	01 00		 cmp	 DWORD PTR _length$[ebp], 65537 ; 00010001H
  0013a	74 41		 je	 SHORT $LN3@main
; Line 473
  0013c	8b f4		 mov	 esi, esp
  0013e	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@EONHCAAK@Error?$CB?5Length?5of?5key?5file?5is?5not@
  00143	8b fc		 mov	 edi, esp
  00145	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  0014b	3b fc		 cmp	 edi, esp
  0014d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00152	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00157	d1 e1		 shl	 ecx, 1
  00159	03 c1		 add	 eax, ecx
  0015b	50		 push	 eax
  0015c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  00162	83 c4 08	 add	 esp, 8
  00165	3b f4		 cmp	 esi, esp
  00167	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 474
  0016c	8b f4		 mov	 esi, esp
  0016e	6a ff		 push	 -1
  00170	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
  00176	3b f4		 cmp	 esi, esp
  00178	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@main:
; Line 476
  0017d	8b f4		 mov	 esi, esp
  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gfptrKey@@3PAU_iobuf@@A ; gfptrKey
  00184	50		 push	 eax
  00185	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  0018b	83 c4 04	 add	 esp, 4
  0018e	3b f4		 cmp	 esi, esp
  00190	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 477
  00195	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gfptrKey@@3PAU_iobuf@@A, 0 ; gfptrKey
; Line 479
  0019f	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?gOp@@3HA, 1	; gOp
  001a6	75 17		 jne	 SHORT $LN2@main
; Line 481
  001a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gfptrOut@@3PAU_iobuf@@A ; gfptrOut
  001ad	50		 push	 eax
  001ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gfptrIn@@3PAU_iobuf@@A ; gfptrIn
  001b4	51		 push	 ecx
  001b5	e8 00 00 00 00	 call	 ?encryptFile@@YAHPAU_iobuf@@0@Z ; encryptFile
  001ba	83 c4 08	 add	 esp, 8
; Line 483
  001bd	eb 15		 jmp	 SHORT $LN1@main
$LN2@main:
; Line 485
  001bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gfptrOut@@3PAU_iobuf@@A ; gfptrOut
  001c4	50		 push	 eax
  001c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gfptrIn@@3PAU_iobuf@@A ; gfptrIn
  001cb	51		 push	 ecx
  001cc	e8 00 00 00 00	 call	 ?decryptFile@@YAHPAU_iobuf@@0@Z ; decryptFile
  001d1	83 c4 08	 add	 esp, 8
$LN1@main:
; Line 488
  001d4	8b f4		 mov	 esi, esp
  001d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gfptrIn@@3PAU_iobuf@@A ; gfptrIn
  001db	50		 push	 eax
  001dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  001e2	83 c4 04	 add	 esp, 4
  001e5	3b f4		 cmp	 esi, esp
  001e7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 489
  001ec	8b f4		 mov	 esi, esp
  001ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gfptrOut@@3PAU_iobuf@@A ; gfptrOut
  001f3	50		 push	 eax
  001f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  001fa	83 c4 04	 add	 esp, 4
  001fd	3b f4		 cmp	 esi, esp
  001ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 491
  00204	eb 02		 jmp	 SHORT $LN8@main
$LN6@main:
  00206	eb 02		 jmp	 SHORT $LN7@main
$LN8@main:
  00208	33 c0		 xor	 eax, eax
$LN7@main:
  0020a	5f		 pop	 edi
  0020b	5e		 pop	 esi
  0020c	5b		 pop	 ebx
  0020d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00213	3b ec		 cmp	 ebp, esp
  00215	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0021a	8b e5		 mov	 esp, ebp
  0021c	5d		 pop	 ebp
  0021d	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parseCommandLine@@YAXHQAPAD@Z
_TEXT	SEGMENT
_x$1 = -92						; size = 4
_err_flag$ = -77					; size = 1
_p_flag$ = -65						; size = 1
_k_flag$ = -53						; size = 1
_o_flag$ = -41						; size = 1
_i_flag$ = -29						; size = 1
_ch$ = -17						; size = 1
_cnt$ = -8						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
?parseCommandLine@@YAXHQAPAD@Z PROC			; parseCommandLine, COMDAT
; File c:\users\ert283\downloads\cs3843_project_initialstudentfiles-rev1(1)\cryptomain_initial.cpp
; Line 253
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 20 01 00
	00		 sub	 esp, 288		; 00000120H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd e0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-288]
  00012	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 258
  0001e	c6 45 cb 00	 mov	 BYTE PTR _k_flag$[ebp], 0
  00022	8a 45 cb	 mov	 al, BYTE PTR _k_flag$[ebp]
  00025	88 45 e3	 mov	 BYTE PTR _i_flag$[ebp], al
; Line 259
  00028	c6 45 d7 00	 mov	 BYTE PTR _o_flag$[ebp], 0
  0002c	8a 45 d7	 mov	 al, BYTE PTR _o_flag$[ebp]
  0002f	88 45 bf	 mov	 BYTE PTR _p_flag$[ebp], al
  00032	8a 4d bf	 mov	 cl, BYTE PTR _p_flag$[ebp]
  00035	88 4d b3	 mov	 BYTE PTR _err_flag$[ebp], cl
; Line 261
  00038	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 1
$LN46@parseComma:
; Line 262
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00042	3b 45 08	 cmp	 eax, DWORD PTR _argc$[ebp]
  00045	0f 8d e7 05 00
	00		 jge	 $LN45@parseComma
; Line 264
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  0004e	8b 4d 0c	 mov	 ecx, DWORD PTR _argv$[ebp]
  00051	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00054	8a 02		 mov	 al, BYTE PTR [edx]
  00056	88 45 ef	 mov	 BYTE PTR _ch$[ebp], al
; Line 265
  00059	0f be 45 ef	 movsx	 eax, BYTE PTR _ch$[ebp]
  0005d	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00060	74 3c		 je	 SHORT $LN44@parseComma
; Line 267
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@BHBEBKEC@All?5options?5must?5be?5preceeded?5by@
  00069	8b fc		 mov	 edi, esp
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  00071	3b fc		 cmp	 edi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0007d	d1 e1		 shl	 ecx, 1
  0007f	03 c1		 add	 eax, ecx
  00081	50		 push	 eax
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  00088	83 c4 08	 add	 esp, 8
  0008b	3b f4		 cmp	 esi, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 268
  00092	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  0009b	83 c4 04	 add	 esp, 4
$LN44@parseComma:
; Line 271
  0009e	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  000a1	8b 4d 0c	 mov	 ecx, DWORD PTR _argv$[ebp]
  000a4	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  000a7	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  000aa	88 45 ef	 mov	 BYTE PTR _ch$[ebp], al
; Line 272
  000ad	33 c0		 xor	 eax, eax
  000af	74 05		 je	 SHORT $LN43@parseComma
  000b1	e9 6e 05 00 00	 jmp	 $LN42@parseComma
$LN43@parseComma:
; Line 276
  000b6	0f be 45 ef	 movsx	 eax, BYTE PTR _ch$[ebp]
  000ba	83 f8 65	 cmp	 eax, 101		; 00000065H
  000bd	74 0d		 je	 SHORT $LN40@parseComma
  000bf	0f be 45 ef	 movsx	 eax, BYTE PTR _ch$[ebp]
  000c3	83 f8 45	 cmp	 eax, 69			; 00000045H
  000c6	0f 85 d4 00 00
	00		 jne	 $LN41@parseComma
$LN40@parseComma:
; Line 278
  000cc	0f b6 45 e3	 movzx	 eax, BYTE PTR _i_flag$[ebp]
  000d0	83 f8 01	 cmp	 eax, 1
  000d3	74 09		 je	 SHORT $LN38@parseComma
  000d5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gOp@@3HA, 0	; gOp
  000dc	74 3c		 je	 SHORT $LN39@parseComma
$LN38@parseComma:
; Line 280
  000de	8b f4		 mov	 esi, esp
  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@LMDBBGLK@Error?$CB?5Already?5specifed?5an?5input@
  000e5	8b fc		 mov	 edi, esp
  000e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  000ed	3b fc		 cmp	 edi, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f4	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000f9	d1 e1		 shl	 ecx, 1
  000fb	03 c1		 add	 eax, ecx
  000fd	50		 push	 eax
  000fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  00104	83 c4 08	 add	 esp, 8
  00107	3b f4		 cmp	 esi, esp
  00109	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 281
  0010e	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  00117	83 c4 04	 add	 esp, 4
$LN39@parseComma:
; Line 284
  0011a	c6 45 e3 01	 mov	 BYTE PTR _i_flag$[ebp], 1
; Line 285
  0011e	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00121	83 c0 01	 add	 eax, 1
  00124	89 45 f8	 mov	 DWORD PTR _cnt$[ebp], eax
; Line 286
  00127	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  0012a	3b 45 08	 cmp	 eax, DWORD PTR _argc$[ebp]
  0012d	7c 3c		 jl	 SHORT $LN37@parseComma
; Line 288
  0012f	8b f4		 mov	 esi, esp
  00131	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@IFNFECJC@Error?$CB?5Must?5specify?5a?5filename?5a@
  00136	8b fc		 mov	 edi, esp
  00138	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  0013e	3b fc		 cmp	 edi, esp
  00140	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00145	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0014a	d1 e1		 shl	 ecx, 1
  0014c	03 c1		 add	 eax, ecx
  0014e	50		 push	 eax
  0014f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  00155	83 c4 08	 add	 esp, 8
  00158	3b f4		 cmp	 esi, esp
  0015a	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 289
  0015f	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  00168	83 c4 04	 add	 esp, 4
$LN37@parseComma:
; Line 292
  0016b	8b f4		 mov	 esi, esp
  0016d	68 00 01 00 00	 push	 256			; 00000100H
  00172	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00175	8b 4d 0c	 mov	 ecx, DWORD PTR _argv$[ebp]
  00178	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  0017b	52		 push	 edx
  0017c	68 00 00 00 00	 push	 OFFSET ?gInFileName@@3PADA ; gInFileName
  00181	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  00187	83 c4 0c	 add	 esp, 12			; 0000000cH
  0018a	3b f4		 cmp	 esi, esp
  0018c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 293
  00191	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?gOp@@3HA, 1	; gOp
  0019b	e9 84 04 00 00	 jmp	 $LN42@parseComma
$LN41@parseComma:
; Line 296
  001a0	0f be 45 ef	 movsx	 eax, BYTE PTR _ch$[ebp]
  001a4	83 f8 64	 cmp	 eax, 100		; 00000064H
  001a7	74 0d		 je	 SHORT $LN34@parseComma
  001a9	0f be 45 ef	 movsx	 eax, BYTE PTR _ch$[ebp]
  001ad	83 f8 44	 cmp	 eax, 68			; 00000044H
  001b0	0f 85 d4 00 00
	00		 jne	 $LN35@parseComma
$LN34@parseComma:
; Line 298
  001b6	0f b6 45 e3	 movzx	 eax, BYTE PTR _i_flag$[ebp]
  001ba	83 f8 01	 cmp	 eax, 1
  001bd	74 09		 je	 SHORT $LN32@parseComma
  001bf	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gOp@@3HA, 0	; gOp
  001c6	74 3c		 je	 SHORT $LN33@parseComma
$LN32@parseComma:
; Line 300
  001c8	8b f4		 mov	 esi, esp
  001ca	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@FBLKPEDD@Error?$CB?5Already?5specifed?5an?5input@
  001cf	8b fc		 mov	 edi, esp
  001d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  001d7	3b fc		 cmp	 edi, esp
  001d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001de	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  001e3	d1 e1		 shl	 ecx, 1
  001e5	03 c1		 add	 eax, ecx
  001e7	50		 push	 eax
  001e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  001ee	83 c4 08	 add	 esp, 8
  001f1	3b f4		 cmp	 esi, esp
  001f3	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 301
  001f8	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  001fb	50		 push	 eax
  001fc	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  00201	83 c4 04	 add	 esp, 4
$LN33@parseComma:
; Line 304
  00204	c6 45 e3 01	 mov	 BYTE PTR _i_flag$[ebp], 1
; Line 305
  00208	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  0020b	83 c0 01	 add	 eax, 1
  0020e	89 45 f8	 mov	 DWORD PTR _cnt$[ebp], eax
; Line 306
  00211	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00214	3b 45 08	 cmp	 eax, DWORD PTR _argc$[ebp]
  00217	7c 3c		 jl	 SHORT $LN31@parseComma
; Line 308
  00219	8b f4		 mov	 esi, esp
  0021b	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@LILFGLCC@Error?$CB?5Must?5specify?5a?5filename?5a@
  00220	8b fc		 mov	 edi, esp
  00222	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  00228	3b fc		 cmp	 edi, esp
  0022a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0022f	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00234	d1 e1		 shl	 ecx, 1
  00236	03 c1		 add	 eax, ecx
  00238	50		 push	 eax
  00239	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  0023f	83 c4 08	 add	 esp, 8
  00242	3b f4		 cmp	 esi, esp
  00244	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 309
  00249	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  0024c	50		 push	 eax
  0024d	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  00252	83 c4 04	 add	 esp, 4
$LN31@parseComma:
; Line 312
  00255	8b f4		 mov	 esi, esp
  00257	68 00 01 00 00	 push	 256			; 00000100H
  0025c	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  0025f	8b 4d 0c	 mov	 ecx, DWORD PTR _argv$[ebp]
  00262	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00265	52		 push	 edx
  00266	68 00 00 00 00	 push	 OFFSET ?gInFileName@@3PADA ; gInFileName
  0026b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  00271	83 c4 0c	 add	 esp, 12			; 0000000cH
  00274	3b f4		 cmp	 esi, esp
  00276	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 313
  0027b	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?gOp@@3HA, 2	; gOp
  00285	e9 9a 03 00 00	 jmp	 $LN42@parseComma
$LN35@parseComma:
; Line 316
  0028a	0f be 45 ef	 movsx	 eax, BYTE PTR _ch$[ebp]
  0028e	83 f8 6f	 cmp	 eax, 111		; 0000006fH
  00291	74 0d		 je	 SHORT $LN28@parseComma
  00293	0f be 45 ef	 movsx	 eax, BYTE PTR _ch$[ebp]
  00297	83 f8 4f	 cmp	 eax, 79			; 0000004fH
  0029a	0f 85 c1 00 00
	00		 jne	 $LN29@parseComma
$LN28@parseComma:
; Line 318
  002a0	0f b6 45 d7	 movzx	 eax, BYTE PTR _o_flag$[ebp]
  002a4	83 f8 01	 cmp	 eax, 1
  002a7	75 3c		 jne	 SHORT $LN27@parseComma
; Line 320
  002a9	8b f4		 mov	 esi, esp
  002ab	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@OMLLAEKC@Error?$CB?5Already?5specifed?5an?5outpu@
  002b0	8b fc		 mov	 edi, esp
  002b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  002b8	3b fc		 cmp	 edi, esp
  002ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002bf	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  002c4	d1 e1		 shl	 ecx, 1
  002c6	03 c1		 add	 eax, ecx
  002c8	50		 push	 eax
  002c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  002cf	83 c4 08	 add	 esp, 8
  002d2	3b f4		 cmp	 esi, esp
  002d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 321
  002d9	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  002dc	50		 push	 eax
  002dd	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  002e2	83 c4 04	 add	 esp, 4
$LN27@parseComma:
; Line 323
  002e5	c6 45 d7 01	 mov	 BYTE PTR _o_flag$[ebp], 1
; Line 324
  002e9	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  002ec	83 c0 01	 add	 eax, 1
  002ef	89 45 f8	 mov	 DWORD PTR _cnt$[ebp], eax
; Line 325
  002f2	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  002f5	3b 45 08	 cmp	 eax, DWORD PTR _argc$[ebp]
  002f8	7c 3c		 jl	 SHORT $LN26@parseComma
; Line 327
  002fa	8b f4		 mov	 esi, esp
  002fc	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@MPGFFKDD@Error?$CB?5Must?5specify?5a?5filename?5a@
  00301	8b fc		 mov	 edi, esp
  00303	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  00309	3b fc		 cmp	 edi, esp
  0030b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00310	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00315	d1 e1		 shl	 ecx, 1
  00317	03 c1		 add	 eax, ecx
  00319	50		 push	 eax
  0031a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  00320	83 c4 08	 add	 esp, 8
  00323	3b f4		 cmp	 esi, esp
  00325	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 328
  0032a	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  0032d	50		 push	 eax
  0032e	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  00333	83 c4 04	 add	 esp, 4
$LN26@parseComma:
; Line 330
  00336	8b f4		 mov	 esi, esp
  00338	68 00 01 00 00	 push	 256			; 00000100H
  0033d	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00340	8b 4d 0c	 mov	 ecx, DWORD PTR _argv$[ebp]
  00343	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00346	52		 push	 edx
  00347	68 00 00 00 00	 push	 OFFSET ?gOutFileName@@3PADA ; gOutFileName
  0034c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  00352	83 c4 0c	 add	 esp, 12			; 0000000cH
  00355	3b f4		 cmp	 esi, esp
  00357	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0035c	e9 c3 02 00 00	 jmp	 $LN42@parseComma
$LN29@parseComma:
; Line 333
  00361	0f be 45 ef	 movsx	 eax, BYTE PTR _ch$[ebp]
  00365	83 f8 6b	 cmp	 eax, 107		; 0000006bH
  00368	74 0d		 je	 SHORT $LN23@parseComma
  0036a	0f be 45 ef	 movsx	 eax, BYTE PTR _ch$[ebp]
  0036e	83 f8 4b	 cmp	 eax, 75			; 0000004bH
  00371	0f 85 c1 00 00
	00		 jne	 $LN24@parseComma
$LN23@parseComma:
; Line 335
  00377	0f b6 45 cb	 movzx	 eax, BYTE PTR _k_flag$[ebp]
  0037b	83 f8 01	 cmp	 eax, 1
  0037e	75 3c		 jne	 SHORT $LN22@parseComma
; Line 337
  00380	8b f4		 mov	 esi, esp
  00382	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@EICJBIPF@Error?$CB?5Already?5specifed?5a?5key?5fi@
  00387	8b fc		 mov	 edi, esp
  00389	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  0038f	3b fc		 cmp	 edi, esp
  00391	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00396	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0039b	d1 e1		 shl	 ecx, 1
  0039d	03 c1		 add	 eax, ecx
  0039f	50		 push	 eax
  003a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  003a6	83 c4 08	 add	 esp, 8
  003a9	3b f4		 cmp	 esi, esp
  003ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 338
  003b0	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  003b3	50		 push	 eax
  003b4	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  003b9	83 c4 04	 add	 esp, 4
$LN22@parseComma:
; Line 340
  003bc	c6 45 cb 01	 mov	 BYTE PTR _k_flag$[ebp], 1
; Line 341
  003c0	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  003c3	83 c0 01	 add	 eax, 1
  003c6	89 45 f8	 mov	 DWORD PTR _cnt$[ebp], eax
; Line 342
  003c9	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  003cc	3b 45 08	 cmp	 eax, DWORD PTR _argc$[ebp]
  003cf	7c 3c		 jl	 SHORT $LN21@parseComma
; Line 344
  003d1	8b f4		 mov	 esi, esp
  003d3	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@DKOFPMPD@Error?$CB?5Must?5specify?5a?5filename?5a@
  003d8	8b fc		 mov	 edi, esp
  003da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  003e0	3b fc		 cmp	 edi, esp
  003e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003e7	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  003ec	d1 e1		 shl	 ecx, 1
  003ee	03 c1		 add	 eax, ecx
  003f0	50		 push	 eax
  003f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  003f7	83 c4 08	 add	 esp, 8
  003fa	3b f4		 cmp	 esi, esp
  003fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 345
  00401	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  00404	50		 push	 eax
  00405	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  0040a	83 c4 04	 add	 esp, 4
$LN21@parseComma:
; Line 347
  0040d	8b f4		 mov	 esi, esp
  0040f	68 00 01 00 00	 push	 256			; 00000100H
  00414	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00417	8b 4d 0c	 mov	 ecx, DWORD PTR _argv$[ebp]
  0041a	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  0041d	52		 push	 edx
  0041e	68 00 00 00 00	 push	 OFFSET ?gKeyFileName@@3PADA ; gKeyFileName
  00423	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  00429	83 c4 0c	 add	 esp, 12			; 0000000cH
  0042c	3b f4		 cmp	 esi, esp
  0042e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00433	e9 ec 01 00 00	 jmp	 $LN42@parseComma
$LN24@parseComma:
; Line 350
  00438	0f be 45 ef	 movsx	 eax, BYTE PTR _ch$[ebp]
  0043c	83 f8 70	 cmp	 eax, 112		; 00000070H
  0043f	74 0d		 je	 SHORT $LN18@parseComma
  00441	0f be 45 ef	 movsx	 eax, BYTE PTR _ch$[ebp]
  00445	83 f8 50	 cmp	 eax, 80			; 00000050H
  00448	0f 85 c1 00 00
	00		 jne	 $LN19@parseComma
$LN18@parseComma:
; Line 352
  0044e	0f b6 45 bf	 movzx	 eax, BYTE PTR _p_flag$[ebp]
  00452	83 f8 01	 cmp	 eax, 1
  00455	75 3c		 jne	 SHORT $LN17@parseComma
; Line 354
  00457	8b f4		 mov	 esi, esp
  00459	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@OPKIBCL@Error?$CB?5Already?5specifed?5a?5passwo@
  0045e	8b fc		 mov	 edi, esp
  00460	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  00466	3b fc		 cmp	 edi, esp
  00468	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0046d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00472	d1 e1		 shl	 ecx, 1
  00474	03 c1		 add	 eax, ecx
  00476	50		 push	 eax
  00477	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  0047d	83 c4 08	 add	 esp, 8
  00480	3b f4		 cmp	 esi, esp
  00482	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 355
  00487	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  00490	83 c4 04	 add	 esp, 4
$LN17@parseComma:
; Line 357
  00493	c6 45 bf 01	 mov	 BYTE PTR _p_flag$[ebp], 1
; Line 358
  00497	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  0049a	83 c0 01	 add	 eax, 1
  0049d	89 45 f8	 mov	 DWORD PTR _cnt$[ebp], eax
; Line 359
  004a0	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  004a3	3b 45 08	 cmp	 eax, DWORD PTR _argc$[ebp]
  004a6	7c 3c		 jl	 SHORT $LN16@parseComma
; Line 361
  004a8	8b f4		 mov	 esi, esp
  004aa	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@LDPPFIPG@Error?$CB?5Must?5enter?5a?5password?5aft@
  004af	8b fc		 mov	 edi, esp
  004b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  004b7	3b fc		 cmp	 edi, esp
  004b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004be	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  004c3	d1 e1		 shl	 ecx, 1
  004c5	03 c1		 add	 eax, ecx
  004c7	50		 push	 eax
  004c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  004ce	83 c4 08	 add	 esp, 8
  004d1	3b f4		 cmp	 esi, esp
  004d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 362
  004d8	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  004db	50		 push	 eax
  004dc	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  004e1	83 c4 04	 add	 esp, 4
$LN16@parseComma:
; Line 364
  004e4	8b f4		 mov	 esi, esp
  004e6	68 00 01 00 00	 push	 256			; 00000100H
  004eb	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  004ee	8b 4d 0c	 mov	 ecx, DWORD PTR _argv$[ebp]
  004f1	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  004f4	52		 push	 edx
  004f5	68 00 00 00 00	 push	 OFFSET ?gPassword@@3PADA ; gPassword
  004fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  00500	83 c4 0c	 add	 esp, 12			; 0000000cH
  00503	3b f4		 cmp	 esi, esp
  00505	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0050a	e9 15 01 00 00	 jmp	 $LN42@parseComma
$LN19@parseComma:
; Line 367
  0050f	0f be 45 ef	 movsx	 eax, BYTE PTR _ch$[ebp]
  00513	83 f8 72	 cmp	 eax, 114		; 00000072H
  00516	74 0d		 je	 SHORT $LN13@parseComma
  00518	0f be 45 ef	 movsx	 eax, BYTE PTR _ch$[ebp]
  0051c	83 f8 52	 cmp	 eax, 82			; 00000052H
  0051f	0f 85 b9 00 00
	00		 jne	 $LN14@parseComma
$LN13@parseComma:
; Line 371
  00525	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00528	83 c0 01	 add	 eax, 1
  0052b	89 45 f8	 mov	 DWORD PTR _cnt$[ebp], eax
; Line 372
  0052e	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00531	3b 45 08	 cmp	 eax, DWORD PTR _argc$[ebp]
  00534	7c 3c		 jl	 SHORT $LN12@parseComma
; Line 374
  00536	8b f4		 mov	 esi, esp
  00538	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@KLPKKKEI@Error?$CB?5Must?5enter?5number?5between@
  0053d	8b fc		 mov	 edi, esp
  0053f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  00545	3b fc		 cmp	 edi, esp
  00547	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0054c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00551	d1 e1		 shl	 ecx, 1
  00553	03 c1		 add	 eax, ecx
  00555	50		 push	 eax
  00556	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  0055c	83 c4 08	 add	 esp, 8
  0055f	3b f4		 cmp	 esi, esp
  00561	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 375
  00566	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  00569	50		 push	 eax
  0056a	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  0056f	83 c4 04	 add	 esp, 4
$LN12@parseComma:
; Line 377
  00572	8b f4		 mov	 esi, esp
  00574	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00577	8b 4d 0c	 mov	 ecx, DWORD PTR _argv$[ebp]
  0057a	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  0057d	52		 push	 edx
  0057e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00584	83 c4 04	 add	 esp, 4
  00587	3b f4		 cmp	 esi, esp
  00589	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0058e	89 45 a4	 mov	 DWORD PTR _x$1[ebp], eax
; Line 378
  00591	83 7d a4 01	 cmp	 DWORD PTR _x$1[ebp], 1
  00595	7c 06		 jl	 SHORT $LN10@parseComma
  00597	83 7d a4 03	 cmp	 DWORD PTR _x$1[ebp], 3
  0059b	7e 37		 jle	 SHORT $LN11@parseComma
$LN10@parseComma:
; Line 380
  0059d	8b f4		 mov	 esi, esp
  0059f	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@DAMCJAK@Warning?$CB?5Entered?5bad?5value?5for?5n@
  005a4	8b fc		 mov	 edi, esp
  005a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  005ac	3b fc		 cmp	 edi, esp
  005ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005b3	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  005b8	d1 e1		 shl	 ecx, 1
  005ba	03 c1		 add	 eax, ecx
  005bc	50		 push	 eax
  005bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  005c3	83 c4 08	 add	 esp, 8
  005c6	3b f4		 cmp	 esi, esp
  005c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 381
  005cd	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR _x$1[ebp], 1
$LN11@parseComma:
; Line 383
  005d4	8b 45 a4	 mov	 eax, DWORD PTR _x$1[ebp]
  005d7	a3 00 00 00 00	 mov	 DWORD PTR ?gNumRounds@@3HA, eax ; gNumRounds
; Line 386
  005dc	eb 46		 jmp	 SHORT $LN42@parseComma
$LN14@parseComma:
; Line 388
  005de	8b f4		 mov	 esi, esp
  005e0	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  005e3	8b 4d 0c	 mov	 ecx, DWORD PTR _argv$[ebp]
  005e6	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  005e9	52		 push	 edx
  005ea	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@KGFPEMBM@Error?$CB?5Illegal?5option?5in?5argumen@
  005ef	8b fc		 mov	 edi, esp
  005f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  005f7	3b fc		 cmp	 edi, esp
  005f9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005fe	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00603	d1 e1		 shl	 ecx, 1
  00605	03 c1		 add	 eax, ecx
  00607	50		 push	 eax
  00608	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  0060e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00611	3b f4		 cmp	 esi, esp
  00613	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 389
  00618	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  0061b	50		 push	 eax
  0061c	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  00621	83 c4 04	 add	 esp, 4
$LN42@parseComma:
; Line 392
  00624	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00627	83 c0 01	 add	 eax, 1
  0062a	89 45 f8	 mov	 DWORD PTR _cnt$[ebp], eax
; Line 393
  0062d	e9 0d fa ff ff	 jmp	 $LN46@parseComma
$LN45@parseComma:
; Line 395
  00632	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gOp@@3HA, 0	; gOp
  00639	75 34		 jne	 SHORT $LN8@parseComma
; Line 397
  0063b	8b f4		 mov	 esi, esp
  0063d	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@HLBMPEJP@Error?$CB?5Encrypt?5or?5Decrypt?5must?5b@
  00642	8b fc		 mov	 edi, esp
  00644	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  0064a	3b fc		 cmp	 edi, esp
  0064c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00651	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00656	d1 e1		 shl	 ecx, 1
  00658	03 c1		 add	 eax, ecx
  0065a	50		 push	 eax
  0065b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  00661	83 c4 08	 add	 esp, 8
  00664	3b f4		 cmp	 esi, esp
  00666	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 398
  0066b	c6 45 b3 01	 mov	 BYTE PTR _err_flag$[ebp], 1
$LN8@parseComma:
; Line 401
  0066f	0f b6 45 e3	 movzx	 eax, BYTE PTR _i_flag$[ebp]
  00673	85 c0		 test	 eax, eax
  00675	75 34		 jne	 SHORT $LN7@parseComma
; Line 403
  00677	8b f4		 mov	 esi, esp
  00679	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@GEEGHLPK@Error?$CB?5No?5input?5file?5specified?4?6@
  0067e	8b fc		 mov	 edi, esp
  00680	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  00686	3b fc		 cmp	 edi, esp
  00688	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0068d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00692	d1 e1		 shl	 ecx, 1
  00694	03 c1		 add	 eax, ecx
  00696	50		 push	 eax
  00697	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  0069d	83 c4 08	 add	 esp, 8
  006a0	3b f4		 cmp	 esi, esp
  006a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 404
  006a7	c6 45 b3 01	 mov	 BYTE PTR _err_flag$[ebp], 1
$LN7@parseComma:
; Line 407
  006ab	0f b6 45 cb	 movzx	 eax, BYTE PTR _k_flag$[ebp]
  006af	85 c0		 test	 eax, eax
  006b1	75 34		 jne	 SHORT $LN6@parseComma
; Line 409
  006b3	8b f4		 mov	 esi, esp
  006b5	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@JJGKKPID@Error?$CB?5No?5key?5file?5specified?4?6?6?$AA@
  006ba	8b fc		 mov	 edi, esp
  006bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  006c2	3b fc		 cmp	 edi, esp
  006c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006c9	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  006ce	d1 e1		 shl	 ecx, 1
  006d0	03 c1		 add	 eax, ecx
  006d2	50		 push	 eax
  006d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  006d9	83 c4 08	 add	 esp, 8
  006dc	3b f4		 cmp	 esi, esp
  006de	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 410
  006e3	c6 45 b3 01	 mov	 BYTE PTR _err_flag$[ebp], 1
$LN6@parseComma:
; Line 413
  006e7	0f b6 45 bf	 movzx	 eax, BYTE PTR _p_flag$[ebp]
  006eb	85 c0		 test	 eax, eax
  006ed	75 30		 jne	 SHORT $LN5@parseComma
; Line 415
  006ef	8b f4		 mov	 esi, esp
  006f1	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@NMMOLMAM@Warning?$CB?5Using?5default?5?8password@
  006f6	8b fc		 mov	 edi, esp
  006f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  006fe	3b fc		 cmp	 edi, esp
  00700	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00705	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0070a	d1 e1		 shl	 ecx, 1
  0070c	03 c1		 add	 eax, ecx
  0070e	50		 push	 eax
  0070f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  00715	83 c4 08	 add	 esp, 8
  00718	3b f4		 cmp	 esi, esp
  0071a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@parseComma:
; Line 418
  0071f	0f b6 45 d7	 movzx	 eax, BYTE PTR _o_flag$[ebp]
  00723	85 c0		 test	 eax, eax
  00725	75 50		 jne	 SHORT $LN4@parseComma
  00727	0f b6 45 b3	 movzx	 eax, BYTE PTR _err_flag$[ebp]
  0072b	85 c0		 test	 eax, eax
  0072d	75 48		 jne	 SHORT $LN4@parseComma
; Line 420
  0072f	68 00 00 00 00	 push	 OFFSET ?gInFileName@@3PADA ; gInFileName
  00734	68 00 00 00 00	 push	 OFFSET ?gOutFileName@@3PADA ; gOutFileName
  00739	e8 00 00 00 00	 call	 _strcpy
  0073e	83 c4 08	 add	 esp, 8
; Line 421
  00741	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?gOp@@3HA, 1	; gOp
  00748	75 12		 jne	 SHORT $LN3@parseComma
; Line 423
  0074a	68 00 00 00 00	 push	 OFFSET ??_C@_04EHENEAPI@?4enc?$AA@
  0074f	68 00 00 00 00	 push	 OFFSET ?gOutFileName@@3PADA ; gOutFileName
  00754	e8 00 00 00 00	 call	 _strcat
  00759	83 c4 08	 add	 esp, 8
$LN3@parseComma:
; Line 425
  0075c	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?gOp@@3HA, 2	; gOp
  00763	75 12		 jne	 SHORT $LN4@parseComma
; Line 427
  00765	68 00 00 00 00	 push	 OFFSET ??_C@_04PDKEMIHM@?4dec?$AA@
  0076a	68 00 00 00 00	 push	 OFFSET ?gOutFileName@@3PADA ; gOutFileName
  0076f	e8 00 00 00 00	 call	 _strcat
  00774	83 c4 08	 add	 esp, 8
$LN4@parseComma:
; Line 431
  00777	0f b6 45 b3	 movzx	 eax, BYTE PTR _err_flag$[ebp]
  0077b	85 c0		 test	 eax, eax
  0077d	74 0c		 je	 SHORT $LN47@parseComma
; Line 433
  0077f	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  00782	50		 push	 eax
  00783	e8 00 00 00 00	 call	 ?usage@@YAXQAPAD@Z	; usage
  00788	83 c4 04	 add	 esp, 4
$LN47@parseComma:
; Line 436
  0078b	5f		 pop	 edi
  0078c	5e		 pop	 esi
  0078d	5b		 pop	 ebx
  0078e	81 c4 20 01 00
	00		 add	 esp, 288		; 00000120H
  00794	3b ec		 cmp	 ebp, esp
  00796	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0079b	8b e5		 mov	 esp, ebp
  0079d	5d		 pop	 ebp
  0079e	c3		 ret	 0
?parseCommandLine@@YAXHQAPAD@Z ENDP			; parseCommandLine
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?usage@@YAXQAPAD@Z
_TEXT	SEGMENT
_argv$ = 8						; size = 4
?usage@@YAXQAPAD@Z PROC					; usage, COMDAT
; File c:\users\ert283\downloads\cs3843_project_initialstudentfiles-rev1(1)\cryptomain_initial.cpp
; Line 234
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 235
  0001e	8b f4		 mov	 esi, esp
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HKODOBAD@?6?6Usage?3?6?6?$AA@
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 237
  00035	8b f4		 mov	 esi, esp
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MOPCGLHN@To?5Encrypt?3?6?$AA@
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  00042	83 c4 04	 add	 esp, 4
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 238
  0004c	b8 04 00 00 00	 mov	 eax, 4
  00051	6b c8 00	 imul	 ecx, eax, 0
  00054	8b f4		 mov	 esi, esp
  00056	8b 55 08	 mov	 edx, DWORD PTR _argv$[ebp]
  00059	8b 04 0a	 mov	 eax, DWORD PTR [edx+ecx]
  0005c	50		 push	 eax
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@JJIJOCMP@?$CFs?5?9e?5?$DMmessage_filename?$DO?5?9k?5?$DMkey@
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  00068	83 c4 08	 add	 esp, 8
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 240
  00072	8b f4		 mov	 esi, esp
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KDGFJOJO@To?5Decrypt?3?6?$AA@
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  0007f	83 c4 04	 add	 esp, 4
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 241
  00089	b8 04 00 00 00	 mov	 eax, 4
  0008e	6b c8 00	 imul	 ecx, eax, 0
  00091	8b f4		 mov	 esi, esp
  00093	8b 55 08	 mov	 edx, DWORD PTR _argv$[ebp]
  00096	8b 04 0a	 mov	 eax, DWORD PTR [edx+ecx]
  00099	50		 push	 eax
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@BJGDLACJ@?$CFs?5?9d?5?$DMmessage_filename?$DO?5?9k?5?$DMkey@
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  000a5	83 c4 08	 add	 esp, 8
  000a8	3b f4		 cmp	 esi, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 243
  000af	8b f4		 mov	 esi, esp
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@PGOBLBKL@?9e?5filename?7?7?3encrypt?5the?5specif@
  000b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  000bc	83 c4 04	 add	 esp, 4
  000bf	3b f4		 cmp	 esi, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 244
  000c6	8b f4		 mov	 esi, esp
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@GOFFCHFO@?9d?5filename?7?7?3decrypt?5the?5specif@
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  000d3	83 c4 04	 add	 esp, 4
  000d6	3b f4		 cmp	 esi, esp
  000d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 245
  000dd	8b f4		 mov	 esi, esp
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@OBNDFCCB@?9p?5password?7?7?3the?5password?5to?5be@
  000e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  000ea	83 c4 04	 add	 esp, 4
  000ed	3b f4		 cmp	 esi, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 246
  000f4	8b f4		 mov	 esi, esp
  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@MAGAAIDD@?9r?5?$DM?$CDrounds?$DO?7?7?3number?5of?5encrypt@
  000fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  00101	83 c4 04	 add	 esp, 4
  00104	3b f4		 cmp	 esi, esp
  00106	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 247
  0010b	8b f4		 mov	 esi, esp
  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_0FE@LAODCPP@?9o?5filename?7?7?3name?5of?5the?5output@
  00112	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  00118	83 c4 04	 add	 esp, 4
  0011b	3b f4		 cmp	 esi, esp
  0011d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 248
  00122	8b f4		 mov	 esi, esp
  00124	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@IPLMHCJC@The?5order?5of?5the?5options?5is?5irre@
  00129	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  0012f	83 c4 04	 add	 esp, 4
  00132	3b f4		 cmp	 esi, esp
  00134	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 249
  00139	8b f4		 mov	 esi, esp
  0013b	6a 00		 push	 0
  0013d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
  00143	3b f4		 cmp	 esi, esp
  00145	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@usage:
; Line 250
  0014a	5f		 pop	 edi
  0014b	5e		 pop	 esi
  0014c	5b		 pop	 ebx
  0014d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00153	3b ec		 cmp	 ebp, esp
  00155	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015a	8b e5		 mov	 esp, ebp
  0015c	5d		 pop	 ebp
  0015d	c3		 ret	 0
?usage@@YAXQAPAD@Z ENDP					; usage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?openOutputFile@@YAPAU_iobuf@@PAD@Z
_TEXT	SEGMENT
_fptr$ = -8						; size = 4
_filename$ = 8						; size = 4
?openOutputFile@@YAPAU_iobuf@@PAD@Z PROC		; openOutputFile, COMDAT
; File c:\users\ert283\downloads\cs3843_project_initialstudentfiles-rev1(1)\cryptomain_initial.cpp
; Line 220
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 223
  0001e	8b f4		 mov	 esi, esp
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03BFHAFKOB@wb?$CL?$AA@
  00025	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  0002f	83 c4 08	 add	 esp, 8
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	89 45 f8	 mov	 DWORD PTR _fptr$[ebp], eax
; Line 224
  0003c	83 7d f8 00	 cmp	 DWORD PTR _fptr$[ebp], 0
  00040	75 45		 jne	 SHORT $LN1@openOutput
; Line 226
  00042	8b f4		 mov	 esi, esp
  00044	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00047	50		 push	 eax
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@DAJOHFLE@?6?6Error?5?9?5Could?5not?5open?5output?5@
  0004d	8b fc		 mov	 edi, esp
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  00055	3b fc		 cmp	 edi, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00061	d1 e1		 shl	 ecx, 1
  00063	03 c1		 add	 eax, ecx
  00065	50		 push	 eax
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  0006c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006f	3b f4		 cmp	 esi, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 227
  00076	8b f4		 mov	 esi, esp
  00078	6a ff		 push	 -1
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
  00080	3b f4		 cmp	 esi, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@openOutput:
; Line 229
  00087	8b 45 f8	 mov	 eax, DWORD PTR _fptr$[ebp]
$LN3@openOutput:
; Line 230
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
  0008d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00093	3b ec		 cmp	 ebp, esp
  00095	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
?openOutputFile@@YAPAU_iobuf@@PAD@Z ENDP		; openOutputFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?openInputFile@@YAPAU_iobuf@@PAD@Z
_TEXT	SEGMENT
_fptr$ = -8						; size = 4
_filename$ = 8						; size = 4
?openInputFile@@YAPAU_iobuf@@PAD@Z PROC			; openInputFile, COMDAT
; File c:\users\ert283\downloads\cs3843_project_initialstudentfiles-rev1(1)\cryptomain_initial.cpp
; Line 207
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 210
  0001e	8b f4		 mov	 esi, esp
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb?$AA@
  00025	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  0002f	83 c4 08	 add	 esp, 8
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	89 45 f8	 mov	 DWORD PTR _fptr$[ebp], eax
; Line 211
  0003c	83 7d f8 00	 cmp	 DWORD PTR _fptr$[ebp], 0
  00040	75 45		 jne	 SHORT $LN1@openInputF
; Line 213
  00042	8b f4		 mov	 esi, esp
  00044	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00047	50		 push	 eax
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@CDMOMEJ@?6?6Error?5?9?5Could?5not?5open?5input?5f@
  0004d	8b fc		 mov	 edi, esp
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  00055	3b fc		 cmp	 edi, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00061	d1 e1		 shl	 ecx, 1
  00063	03 c1		 add	 eax, ecx
  00065	50		 push	 eax
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  0006c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006f	3b f4		 cmp	 esi, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 214
  00076	8b f4		 mov	 esi, esp
  00078	6a ff		 push	 -1
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
  00080	3b f4		 cmp	 esi, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@openInputF:
; Line 216
  00087	8b 45 f8	 mov	 eax, DWORD PTR _fptr$[ebp]
$LN3@openInputF:
; Line 217
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
  0008d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00093	3b ec		 cmp	 ebp, esp
  00095	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
?openInputFile@@YAPAU_iobuf@@PAD@Z ENDP			; openInputFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?decryptFile@@YAHPAU_iobuf@@0@Z
_TEXT	SEGMENT
_filesize$ = -20					; size = 4
_buffer$ = -8						; size = 4
_fptrIn$ = 8						; size = 4
_fptrOut$ = 12						; size = 4
?decryptFile@@YAHPAU_iobuf@@0@Z PROC			; decryptFile, COMDAT
; File c:\users\ert283\downloads\cs3843_project_initialstudentfiles-rev1(1)\cryptomain_initial.cpp
; Line 178
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 182
  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 08	 mov	 eax, DWORD PTR _fptrIn$[ebp]
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___fileno
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b f4		 mov	 esi, esp
  00036	50		 push	 eax
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___filelength
  0003d	83 c4 04	 add	 esp, 4
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	89 45 ec	 mov	 DWORD PTR _filesize$[ebp], eax
; Line 183
  0004a	81 7d ec 00 00
	00 01		 cmp	 DWORD PTR _filesize$[ebp], 16777216 ; 01000000H
  00051	76 38		 jbe	 SHORT $LN2@decryptFil
; Line 185
  00053	8b f4		 mov	 esi, esp
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@JAEAEOCO@Error?5?9?5Input?5file?5too?5large?4?6?6?$AA@
  0005a	8b fc		 mov	 edi, esp
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  00062	3b fc		 cmp	 edi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0006e	d1 e1		 shl	 ecx, 1
  00070	03 c1		 add	 eax, ecx
  00072	50		 push	 eax
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  00079	83 c4 08	 add	 esp, 8
  0007c	3b f4		 cmp	 esi, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 186
  00083	83 c8 ff	 or	 eax, -1
  00086	e9 c0 00 00 00	 jmp	 $LN3@decryptFil
$LN2@decryptFil:
; Line 190
  0008b	8b f4		 mov	 esi, esp
  0008d	8b 45 ec	 mov	 eax, DWORD PTR _filesize$[ebp]
  00090	50		 push	 eax
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00097	83 c4 04	 add	 esp, 4
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	89 45 f8	 mov	 DWORD PTR _buffer$[ebp], eax
; Line 191
  000a4	83 7d f8 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  000a8	75 39		 jne	 SHORT $LN1@decryptFil
; Line 193
  000aa	8b f4		 mov	 esi, esp
  000ac	8b 45 ec	 mov	 eax, DWORD PTR _filesize$[ebp]
  000af	50		 push	 eax
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@DPPAPLJB@Error?5?9?5Could?5not?5allocate?5?$CFd?5by@
  000b5	8b fc		 mov	 edi, esp
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  000bd	3b fc		 cmp	 edi, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c4	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000c9	d1 e1		 shl	 ecx, 1
  000cb	03 c1		 add	 eax, ecx
  000cd	50		 push	 eax
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d7	3b f4		 cmp	 esi, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 194
  000de	83 c8 ff	 or	 eax, -1
  000e1	eb 68		 jmp	 SHORT $LN3@decryptFil
$LN1@decryptFil:
; Line 197
  000e3	8b f4		 mov	 esi, esp
  000e5	8b 45 08	 mov	 eax, DWORD PTR _fptrIn$[ebp]
  000e8	50		 push	 eax
  000e9	8b 4d ec	 mov	 ecx, DWORD PTR _filesize$[ebp]
  000ec	51		 push	 ecx
  000ed	6a 01		 push	 1
  000ef	8b 55 f8	 mov	 edx, DWORD PTR _buffer$[ebp]
  000f2	52		 push	 edx
  000f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  000f9	83 c4 10	 add	 esp, 16			; 00000010H
  000fc	3b f4		 cmp	 esi, esp
  000fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 198
  00103	8b 45 ec	 mov	 eax, DWORD PTR _filesize$[ebp]
  00106	50		 push	 eax
  00107	8b 4d f8	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0010a	51		 push	 ecx
  0010b	e8 00 00 00 00	 call	 ?decryptData@@YAHPADH@Z	; decryptData
  00110	83 c4 08	 add	 esp, 8
; Line 199
  00113	8b f4		 mov	 esi, esp
  00115	8b 45 0c	 mov	 eax, DWORD PTR _fptrOut$[ebp]
  00118	50		 push	 eax
  00119	8b 4d ec	 mov	 ecx, DWORD PTR _filesize$[ebp]
  0011c	51		 push	 ecx
  0011d	6a 01		 push	 1
  0011f	8b 55 f8	 mov	 edx, DWORD PTR _buffer$[ebp]
  00122	52		 push	 edx
  00123	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  00129	83 c4 10	 add	 esp, 16			; 00000010H
  0012c	3b f4		 cmp	 esi, esp
  0012e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 200
  00133	8b f4		 mov	 esi, esp
  00135	8b 45 f8	 mov	 eax, DWORD PTR _buffer$[ebp]
  00138	50		 push	 eax
  00139	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0013f	83 c4 04	 add	 esp, 4
  00142	3b f4		 cmp	 esi, esp
  00144	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 202
  00149	33 c0		 xor	 eax, eax
$LN3@decryptFil:
; Line 203
  0014b	5f		 pop	 edi
  0014c	5e		 pop	 esi
  0014d	5b		 pop	 ebx
  0014e	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00154	3b ec		 cmp	 ebp, esp
  00156	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015b	8b e5		 mov	 esp, ebp
  0015d	5d		 pop	 ebp
  0015e	c3		 ret	 0
?decryptFile@@YAHPAU_iobuf@@0@Z ENDP			; decryptFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?encryptFile@@YAHPAU_iobuf@@0@Z
_TEXT	SEGMENT
_filesize$ = -20					; size = 4
_buffer$ = -8						; size = 4
_fptrIn$ = 8						; size = 4
_fptrOut$ = 12						; size = 4
?encryptFile@@YAHPAU_iobuf@@0@Z PROC			; encryptFile, COMDAT
; File c:\users\ert283\downloads\cs3843_project_initialstudentfiles-rev1(1)\cryptomain_initial.cpp
; Line 148
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 152
  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 08	 mov	 eax, DWORD PTR _fptrIn$[ebp]
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___fileno
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b f4		 mov	 esi, esp
  00036	50		 push	 eax
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___filelength
  0003d	83 c4 04	 add	 esp, 4
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	89 45 ec	 mov	 DWORD PTR _filesize$[ebp], eax
; Line 153
  0004a	81 7d ec 00 00
	00 01		 cmp	 DWORD PTR _filesize$[ebp], 16777216 ; 01000000H
  00051	76 38		 jbe	 SHORT $LN2@encryptFil
; Line 155
  00053	8b f4		 mov	 esi, esp
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@JAEAEOCO@Error?5?9?5Input?5file?5too?5large?4?6?6?$AA@
  0005a	8b fc		 mov	 edi, esp
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  00062	3b fc		 cmp	 edi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0006e	d1 e1		 shl	 ecx, 1
  00070	03 c1		 add	 eax, ecx
  00072	50		 push	 eax
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  00079	83 c4 08	 add	 esp, 8
  0007c	3b f4		 cmp	 esi, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 156
  00083	83 c8 ff	 or	 eax, -1
  00086	e9 c0 00 00 00	 jmp	 $LN3@encryptFil
$LN2@encryptFil:
; Line 160
  0008b	8b f4		 mov	 esi, esp
  0008d	8b 45 ec	 mov	 eax, DWORD PTR _filesize$[ebp]
  00090	50		 push	 eax
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00097	83 c4 04	 add	 esp, 4
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	89 45 f8	 mov	 DWORD PTR _buffer$[ebp], eax
; Line 161
  000a4	83 7d f8 00	 cmp	 DWORD PTR _buffer$[ebp], 0
  000a8	75 39		 jne	 SHORT $LN1@encryptFil
; Line 163
  000aa	8b f4		 mov	 esi, esp
  000ac	8b 45 ec	 mov	 eax, DWORD PTR _filesize$[ebp]
  000af	50		 push	 eax
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@DPPAPLJB@Error?5?9?5Could?5not?5allocate?5?$CFd?5by@
  000b5	8b fc		 mov	 edi, esp
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  000bd	3b fc		 cmp	 edi, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c4	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000c9	d1 e1		 shl	 ecx, 1
  000cb	03 c1		 add	 eax, ecx
  000cd	50		 push	 eax
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d7	3b f4		 cmp	 esi, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 164
  000de	83 c8 ff	 or	 eax, -1
  000e1	eb 68		 jmp	 SHORT $LN3@encryptFil
$LN1@encryptFil:
; Line 167
  000e3	8b f4		 mov	 esi, esp
  000e5	8b 45 08	 mov	 eax, DWORD PTR _fptrIn$[ebp]
  000e8	50		 push	 eax
  000e9	8b 4d ec	 mov	 ecx, DWORD PTR _filesize$[ebp]
  000ec	51		 push	 ecx
  000ed	6a 01		 push	 1
  000ef	8b 55 f8	 mov	 edx, DWORD PTR _buffer$[ebp]
  000f2	52		 push	 edx
  000f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  000f9	83 c4 10	 add	 esp, 16			; 00000010H
  000fc	3b f4		 cmp	 esi, esp
  000fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 168
  00103	8b 45 ec	 mov	 eax, DWORD PTR _filesize$[ebp]
  00106	50		 push	 eax
  00107	8b 4d f8	 mov	 ecx, DWORD PTR _buffer$[ebp]
  0010a	51		 push	 ecx
  0010b	e8 00 00 00 00	 call	 ?encryptData@@YAHPADH@Z	; encryptData
  00110	83 c4 08	 add	 esp, 8
; Line 169
  00113	8b f4		 mov	 esi, esp
  00115	8b 45 0c	 mov	 eax, DWORD PTR _fptrOut$[ebp]
  00118	50		 push	 eax
  00119	8b 4d ec	 mov	 ecx, DWORD PTR _filesize$[ebp]
  0011c	51		 push	 ecx
  0011d	6a 01		 push	 1
  0011f	8b 55 f8	 mov	 edx, DWORD PTR _buffer$[ebp]
  00122	52		 push	 edx
  00123	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  00129	83 c4 10	 add	 esp, 16			; 00000010H
  0012c	3b f4		 cmp	 esi, esp
  0012e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 170
  00133	8b f4		 mov	 esi, esp
  00135	8b 45 f8	 mov	 eax, DWORD PTR _buffer$[ebp]
  00138	50		 push	 eax
  00139	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0013f	83 c4 04	 add	 esp, 4
  00142	3b f4		 cmp	 esi, esp
  00144	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 172
  00149	33 c0		 xor	 eax, eax
$LN3@encryptFil:
; Line 173
  0014b	5f		 pop	 edi
  0014c	5e		 pop	 esi
  0014d	5b		 pop	 ebx
  0014e	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00154	3b ec		 cmp	 ebp, esp
  00156	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015b	8b e5		 mov	 esp, ebp
  0015d	5d		 pop	 ebp
  0015e	c3		 ret	 0
?encryptFile@@YAHPAU_iobuf@@0@Z ENDP			; encryptFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?exCountLetters@@YAXPADHPAH11@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
_dataLength$ = 12					; size = 4
_numC$ = 16						; size = 4
_numL$ = 20						; size = 4
_numO$ = 24						; size = 4
?exCountLetters@@YAXPADHPAH11@Z PROC			; exCountLetters, COMDAT
; File c:\users\ert283\downloads\cs3843_project_initialstudentfiles-rev1(1)\cryptomain_initial.cpp
; Line 68
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 70
  0001e	fc		 cld
; Line 71
  0001f	56		 push	 esi
; Line 72
  00020	51		 push	 ecx
; Line 73
  00021	53		 push	 ebx
; Line 74
  00022	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]
; Line 75
  00025	8b 4d 0c	 mov	 ecx, DWORD PTR _dataLength$[ebp]
$LOOP_X1$3:
; Line 78
  00028	ac		 lodsb
; Line 79
  00029	8a d8		 mov	 bl, al
; Line 80
  0002b	50		 push	 eax
; Line 81
  0002c	e8 2b 00 00 00	 call	 $isLetter$4
; Line 82
  00031	83 c4 04	 add	 esp, 4
; Line 83
  00034	84 c0		 test	 al, al
; Line 84
  00036	74 16		 je	 SHORT $lbl_OTHER$5
; Line 86
  00038	8a c3		 mov	 al, bl
; Line 87
  0003a	24 20		 and	 al, 32			; 00000020H
; Line 88
  0003c	74 08		 je	 SHORT $lbl_CAP$6
; Line 90
  0003e	8b 5d 14	 mov	 ebx, DWORD PTR _numL$[ebp]
; Line 91
  00041	80 03 01	 add	 BYTE PTR [ebx], 1
; Line 92
  00044	eb 0e		 jmp	 SHORT $lbl_NEXT$7
$lbl_CAP$6:
; Line 95
  00046	8b 5d 10	 mov	 ebx, DWORD PTR _numC$[ebp]
; Line 96
  00049	80 03 01	 add	 BYTE PTR [ebx], 1
; Line 97
  0004c	eb 06		 jmp	 SHORT $lbl_NEXT$7
$lbl_OTHER$5:
; Line 100
  0004e	8b 5d 18	 mov	 ebx, DWORD PTR _numO$[ebp]
; Line 101
  00051	80 03 01	 add	 BYTE PTR [ebx], 1
$lbl_NEXT$7:
; Line 103
  00054	49		 dec	 ecx
; Line 104
  00055	75 d1		 jne	 SHORT $LOOP_X1$3
; Line 106
  00057	5b		 pop	 ebx
; Line 107
  00058	59		 pop	 ecx
; Line 108
  00059	5e		 pop	 esi
; Line 109
  0005a	eb 25		 jmp	 SHORT $EXIT_C_EXAMPLE$8
$isLetter$4:
; Line 112
  0005c	55		 push	 ebp
; Line 113
  0005d	8b ec		 mov	 ebp, esp
; Line 114
  0005f	8a 45 08	 mov	 al, BYTE PTR [ebp+8]
; Line 115
  00062	3c 40		 cmp	 al, 64			; 00000040H
; Line 116
  00064	77 0d		 ja	 SHORT $lbl_CHK_ZU$9
$lbl_RET_FALSE$10:
; Line 119
  00066	33 c0		 xor	 eax, eax
$lbl_RET$11:
; Line 121
  00068	8b e5		 mov	 esp, ebp
; Line 122
  0006a	5d		 pop	 ebp
; Line 123
  0006b	c3		 ret	 0
$lbl_RET_TRUE$12:
; Line 126
  0006c	b8 01 00 00 00	 mov	 eax, 1
; Line 127
  00071	eb f5		 jmp	 SHORT $lbl_RET$11
$lbl_CHK_ZU$9:
; Line 130
  00073	3c 5b		 cmp	 al, 91			; 0000005bH
; Line 131
  00075	72 f5		 jb	 SHORT $lbl_RET_TRUE$12
; Line 133
  00077	3c 61		 cmp	 al, 97			; 00000061H
; Line 134
  00079	72 eb		 jb	 SHORT $lbl_RET_FALSE$10
; Line 136
  0007b	3c 7a		 cmp	 al, 122			; 0000007aH
; Line 137
  0007d	76 ed		 jbe	 SHORT $lbl_RET_TRUE$12
; Line 138
  0007f	eb e5		 jmp	 SHORT $lbl_RET_FALSE$10
$EXIT_C_EXAMPLE$8:
; Line 144
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0008a	3b ec		 cmp	 ebp, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
?exCountLetters@@YAXPADHPAH11@Z ENDP			; exCountLetters
_TEXT	ENDS
END
